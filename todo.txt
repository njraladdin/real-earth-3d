LEARNINGS:

i tested same colmap and same iteration number on official dataset and result  was decent. 
problem was with our dataset. there hsould be way more overlap between images and only 20% new content in each image. rotate around a single object 
trying to match two seperate splats togehter looks sloppy. 

okay, so now we have grouped images by the object in focus. 
now when we want to add new images, we get the group of images that are closest to the new image, and run colmap on them. 

*reducing max features make the process way faster, so use that to be able to run 100 images at a time
*running images aounrd a big location increases the change of it being confused and objects apepar in wrong places

* rotate adn take around 20 images in your place. move 2 steps into a visible area. repeat. this is good enough to make large scale splats.

* creating spots for same tile in different days / time (outside) would most likely result in colmap failure. spots for a tile should be done once continously

* use suerpl.at for cleaning up the splat (manually, best result). go top view, polygon select main area. globe select main areas. small brush cleanup. make sure bounding box is as small as possible

* stickign small splats for the same structure looks bad. splat should have a full structure 

* get away from inside buildings. stick to open roads. spot appraoch 

THINKING: 
- since the end goal is to scan the whole world, we need 

CURRENT APPROACH: 
- frontend: view splats, upload splats, adjust splats. 
- splat creation in backend: put images in input folder, run colmap, run opensplat, upload splat in frontend 
- taking images: 1- stand in place. take 20 images around you while rotating. move 2 stpes in a visible spot. repeat. 
                  2- stand in place,  take 10 images. each image has 50% overlap with the previous one.  move 1 step in a visible spot. repeat. 
TODO : 
- preview splat on frontend, be able to adjust it (scale, roation, translation), done 
- change database structure to the spots appraoch. we have only one splat per tile, and each splat have multiple spots. you can add more spots, or delete, done  
- store images in backend instead of firebase (only splats are stored in firebase), done 
- create api endpoint to run splat (colmap then splat). in frontend you can select spots, and request new splat, done 
- simplfy frontend: only upload splats directly, manage splats, done  
- backend: one input folder, run colmap and opesplat in different scripts, done 
-gta style mini map based on actual current position (for easier navigation), done 
- change single splat per tile appraoch: each splat would have a posiiton, update firestore schema. done 
- process splat:  align with ground plane, remove unneccesary points (floating clouds), convert to .splat, done 
- fix far away splat going over near splat, done 
- test with only 10 images per spot, done 
- make splat for front dar. so ful lsplats are dar, frontdar, jnen 
- run splats with 5000 steps, done 
- testing putting small chunks splats together. like each side of dar (looks good), done
- fix splats depth still  not perfect. make distance calcualted form center, or when entering a splat, done 
fix frontend:
- fix deleting / add splats not udpate ui, done 
- highlight selected splat, done 
- clean up project, done 



 FINAL LEARNINGS: 
-> best camera technique is spot appraoch: stand in place, 20 images around you, move 2 steps, 20 images, repeat 
-> open areas work best. avoid tight corridors / inside buildings 
-> adjust splat in superspl.at. trim until you leave only robust objects 
-> don't scan randomly, just follow walkable areas 
-> walking spots scan around 5-7 meters around you. 
-> each splat shouldn't include any other object from another splat
TODO :
- scan a few areas, clean them up and add them, done 
- deploy, done 

- try compressing images, see difference in performance in colmap / opensplat (run same 500 iamges, can you run 5000 opensplat steps now?): not much difference, done 
- be able to download / update a splat fil, done 
 -try only trim splats form the parts where it would connect with another splat (the start and end of road) : messy, splats together don't look good., done 



- cover full field next home 
- cover full jnen  
- cover full cemetry 
- cover road from dar until ayyad castle (road + historical monument)

FUTURE TODOS:
- add minimap, done 
- load character in a good place, done 
- hide config UI, done 
- add clear movement control  
- add intro animation 
- don't load all splats at once 
- fix render order 



