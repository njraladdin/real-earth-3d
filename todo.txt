LEARNINGS:

i tested same colmap and same iteration number on official dataset and result  was decent. 
problem was with our dataset. there hsould be way more overlap between images and only 20% new content in each image. rotate around a single object 
trying to match two seperate splats togehter looks sloppy. 

okay, so now we have grouped images by the object in focus. 
now when we want to add new images, we get the group of images that are closest to the new image, and run colmap on them. 


*reducing max features make the process way faster, so use that to be able to run 100 images at a time
*running images aounrd a big location increases the change of it being confused and objects apepar in wrong places


* rotate adn take around 20 images in your place. move 2 steps into a visible area. repeat. this is good enough to make large scale splats.

* creating spots for same tile in different days / time (outside) would most likely result in colmap failure. spots for a tile should be done once continously

CURRENT APPROACH: 
- frontend: view splats, upload splats, adjust splats. 
- splat creation in backend: put images in input folder, run colmap, run opensplat, upload splat in frontend 
- taking images: stand in place. take 20 images around you while rotating. move 2 stpes in a visible spot. repeat. 

TODO : 
- preview splat on frontend, be able to adjust it (scale, roation, translation), done 
- change database structure to the spots appraoch. we have only one splat per tile, and each splat have multiple spots. you can add more spots, or delete, done  
- store images in backend instead of firebase (only splats are stored in firebase), done 
- create api endpoint to run splat (colmap then splat). in frontend you can select spots, and request new splat, done 
- simplfy frontend: only upload splats directly, manage splats, done  
- backend: one input folder, run colmap and opesplat in different scripts, done 
-gta style mini map based on actual current position (for easier navigation), done 
- change single splat per tile appraoch: each splat would have a posiiton, update firestore schema. done 


- make it easier to adjust a splat (rotation, transation)





